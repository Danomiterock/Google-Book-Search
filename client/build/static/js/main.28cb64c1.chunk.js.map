{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/DeleteBtn/DeleteBtn.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/TextArea.js","components/Form/FormBtn.js","pages/Books/Books.js","components/Nav/Nav.js","App.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","DeleteBtn","props","role","tabIndex","axios","get","id","delete","bookData","post","Col","size","split","map","join","Container","fluid","Row","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","Books","useState","books","setBooks","title","author","synopsis","formObject","setFormObject","loadBooks","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","value","useEffect","onChange","placeholder","disabled","onClick","preventDefault","length","book","key","_id","href","Nav","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28cb64c1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./DeleteBtn.css\";\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n      âœ—\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api/books\", bookData);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport DeleteBtn from \"../../components/DeleteBtn\";\r\nimport API from \"../../utils/API\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\r\n\r\nfunction Books() {\r\n  // Setting our component's initial state\r\n  const [books, setBooks] = useState([])\r\n  const [formObject, setFormObject] = useState({\r\n    title: \"\",\r\n    author: \"\",\r\n    synopsis: \"\"\r\n  })\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadBooks()\r\n  }, [])\r\n\r\n  // Loads all books and sets them to books\r\n  function loadBooks() {\r\n    API.getBooks()\r\n      .then(res => \r\n        setBooks(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  function deleteBook(id) {\r\n    API.deleteBook(id)\r\n      .then(res => loadBooks())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value})\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    if (formObject.title && formObject.author) {\r\n      API.saveBook({\r\n        title: formObject.title,\r\n        author: formObject.author,\r\n        synopsis: formObject.synopsis\r\n      })\r\n        .then(() => setFormObject({\r\n          title: \"\",\r\n          author: \"\",\r\n          synopsis: \"\"\r\n        }))\r\n        .then(() => loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Books Should I Read?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n                value={formObject.title}\r\n              />\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Author (required)\"\r\n                value={formObject.author}\r\n              />\r\n              <TextArea\r\n                onChange={handleInputChange}\r\n                name=\"synopsis\"\r\n                placeholder=\"Synopsis (Optional)\"\r\n                value={formObject.synopsis}\r\n              />\r\n              <FormBtn\r\n                disabled={!(formObject.author && formObject.title)}\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Submit Book\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Books On My List</h1>\r\n            </Jumbotron>\r\n            {books.length ? (\r\n              <List>\r\n                {books.map(book => {\r\n                  return (\r\n                    <ListItem key={book._id}>\r\n                      <a href={\"/books/\" + book._id}>\r\n                        <strong>\r\n                          {book.title} by {book.author}\r\n                        </strong>\r\n                      </a>\r\n                      <DeleteBtn onClick={() => deleteBook(book._id)} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Books;\r\n","import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        React Reading List\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Books from \"./pages/Books\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Books />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}